{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\AJAY\\\\projects\\\\fullstack-ecommerce\\\\fullstack-ecommerce-application\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\AJAY\\\\projects\\\\fullstack-ecommerce\\\\fullstack-ecommerce-application\\\\src\\\\components\\\\Products\\\\Products.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  flex-wrap: wrap;\\n  flex-direction: column;\\n  margin: 2% 5%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport SubHeader from '../Header/SubHeader';\nimport { Query } from 'react-apollo';\nimport { GET_PRODUCTS, GET_LIMIT } from '../../constants';\nimport Filters from './Filters';\nimport ProductItem from './ProductItem';\nvar ProductItemsWrapper = styled.div(_templateObject());\nvar Alert = styled.span(_templateObject2());\n\nvar Products = function Products(_ref) {\n  var history = _ref.history;\n  return React.createElement(React.Fragment, null, history && React.createElement(SubHeader, {\n    title: \"Available products\",\n    goToCart: function goToCart() {\n      return history.push('/cart');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Query, {\n    query: GET_LIMIT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, function (_ref2) {\n    var data = _ref2.data;\n    return React.createElement(React.Fragment, null, React.createElement(Filters, {\n      limit: parseInt(data.limit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Query, {\n      query: GET_PRODUCTS,\n      variables: {\n        limit: parseInt(data.limit)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, function (_ref3) {\n      var loading = _ref3.loading,\n          error = _ref3.error,\n          data = _ref3.data;\n\n      if (loading || error) {\n        return React.createElement(Alert, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, loading ? 'Loading...' : error);\n      }\n\n      return React.createElement(ProductItemsWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, data.products && data.products.map(function (product) {\n        return React.createElement(ProductItem, {\n          key: product.id,\n          data: product,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      }));\n    }));\n  }));\n};\n\nexport default Products;","map":{"version":3,"sources":["C:/Users/AJAY/projects/fullstack-ecommerce/fullstack-ecommerce-application/src/components/Products/Products.js"],"names":["React","styled","SubHeader","Query","GET_PRODUCTS","GET_LIMIT","Filters","ProductItem","ProductItemsWrapper","div","Alert","span","Products","history","push","data","parseInt","limit","loading","error","products","map","product","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,iBAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAIA,IAAMC,mBAAmB,GAAGP,MAAM,CAACQ,GAAV,mBAAzB;AAQA,IAAMC,KAAK,GAAGT,MAAM,CAACU,IAAV,oBAAX;;AAKA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SACf,0CACGA,OAAO,IACN,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,oBADR;AAEE,IAAA,QAAQ,EAAE;AAAA,aAAMA,OAAO,CAACC,IAAR,CAAa,OAAb,CAAN;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAET,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGU,IAAH,SAAGA,IAAH;AAAA,WACC,0CACA,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEC,QAAQ,CAACD,IAAI,CAACE,KAAN,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEb,YAAd;AAA4B,MAAA,SAAS,EAAE;AACrCa,QAAAA,KAAK,EACHD,QAAQ,CAACD,IAAI,CAACE,KAAN;AAF2B,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,iBAA8B;AAAA,UAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,UAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,UAAXJ,IAAW,SAAXA,IAAW;;AAC7B,UAAIG,OAAO,IAAIC,KAAf,EAAsB;AACpB,eAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQD,OAAO,GAAG,YAAH,GACpBC,KADK,CAAP;AAED;;AAED,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,IAAI,CAACK,QAAL,IACCL,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkB,UAAAC,OAAO;AAAA,eACvB,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,UAAA,IAAI,EAAED,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB;AAAA,OAAzB,CAFJ,CADF;AAQD,KAlBH,CAFF,CADD;AAAA,GADH,CAPF,CADe;AAAA,CAAjB;;AAyCA,eAAeV,QAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SubHeader from '../Header/SubHeader';\r\nimport { Query } from 'react-apollo';\r\nimport { GET_PRODUCTS, GET_LIMIT } from '../../constants';\r\nimport Filters from './Filters';\r\nimport ProductItem from './ProductItem';\r\n\r\n\r\n\r\nconst ProductItemsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  margin: 2% 5%;\r\n`;\r\n\r\nconst Alert = styled.span`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Products = ({ history }) => (\r\n  <>\r\n    {history && (\r\n      <SubHeader\r\n        title='Available products'\r\n        goToCart={() => history.push('/cart')}\r\n      />\r\n    )}\r\n    <Query query={GET_LIMIT}>\r\n      {({ data }) => (\r\n        <>\r\n        <Filters limit={parseInt(data.limit)} />\r\n          <Query query={GET_PRODUCTS} variables={{\r\n            limit:\r\n              parseInt(data.limit)\r\n          }}>\r\n            {({ loading, error, data }) => {\r\n              if (loading || error) {\r\n                return <Alert>{loading ? 'Loading...' :\r\n                  error}</Alert>;\r\n              }\r\n\r\n              return (\r\n                <ProductItemsWrapper>\r\n                  {data.products &&\r\n                    data.products.map(product => (\r\n                      <ProductItem key={product.id} data={product} />\r\n                    ))}\r\n                </ProductItemsWrapper>\r\n              );\r\n            }}\r\n          </Query>\r\n        </>\r\n      )}\r\n    </Query>\r\n  </>\r\n\r\n);\r\n\r\n\r\n\r\nexport default Products;\r\n"]},"metadata":{},"sourceType":"module"}